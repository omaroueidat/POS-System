// <auto-generated />
using System;
using Entities.Database_Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240808113129_POS_Database_AlterTables")]
    partial class POS_Database_AlterTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.CustomerModels.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = new Guid("d1e6a2f5-0d5a-4d35-835b-623eaf6b3b43"),
                            CustomerAddress = "123 Elm St, Springfield",
                            CustomerName = "John Doe",
                            PhoneNumber = 12345
                        },
                        new
                        {
                            CustomerId = new Guid("5e1d1c9c-8f2a-4b0b-bcf7-1c44e5a62e1d"),
                            CustomerAddress = "456 Oak St, Springfield",
                            CustomerName = "Jane Smith",
                            PhoneNumber = 23456
                        },
                        new
                        {
                            CustomerId = new Guid("e0d11f8f-fb26-4b58-9b1b-fb18c8b01a2e"),
                            CustomerAddress = "789 Pine St, Springfield",
                            CustomerName = "Alice Johnson",
                            PhoneNumber = 34567
                        },
                        new
                        {
                            CustomerId = new Guid("2d7418db-c4e4-44c4-947f-e8dc56f0c517"),
                            CustomerAddress = "321 Maple St, Springfield",
                            CustomerName = "Bob Brown",
                            PhoneNumber = 45678
                        },
                        new
                        {
                            CustomerId = new Guid("4f4d08a4-8827-4d65-89a6-0a50f4769fa4"),
                            CustomerAddress = "654 Cedar St, Springfield",
                            CustomerName = "Charlie Davis",
                            PhoneNumber = 56789
                        },
                        new
                        {
                            CustomerId = new Guid("c8f76e8d-1b9e-4d3d-8d58-20b2a0f11a3b"),
                            CustomerAddress = "987 Birch St, Springfield",
                            CustomerName = "David Wilson",
                            PhoneNumber = 67890
                        },
                        new
                        {
                            CustomerId = new Guid("f4e5b029-3b58-4a67-b1b6-2d23ac7f69d2"),
                            CustomerAddress = "123 Walnut St, Springfield",
                            CustomerName = "Emma Taylor",
                            PhoneNumber = 78901
                        },
                        new
                        {
                            CustomerId = new Guid("2b98e616-8e6a-4c4a-8908-7e8f6c6b9f7e"),
                            CustomerAddress = "456 Willow St, Springfield",
                            CustomerName = "Frank Harris",
                            PhoneNumber = 89012
                        },
                        new
                        {
                            CustomerId = new Guid("7f62de52-2c1e-4a79-9e46-3d2f5e1d8e43"),
                            CustomerAddress = "789 Maple St, Springfield",
                            CustomerName = "Grace Clark",
                            PhoneNumber = 90123
                        },
                        new
                        {
                            CustomerId = new Guid("6e8e03c6-8d21-44a3-9f5d-17443477d05f"),
                            CustomerAddress = "321 Oak St, Springfield",
                            CustomerName = "Henry Lewis",
                            PhoneNumber = 12345
                        },
                        new
                        {
                            CustomerId = new Guid("a638dfb5-8a52-4fcf-b9e1-4a732df8a38c"),
                            CustomerAddress = "654 Pine St, Springfield",
                            CustomerName = "Ivy Walker",
                            PhoneNumber = 23456
                        },
                        new
                        {
                            CustomerId = new Guid("fabc3a9d-98b4-4c62-9440-5b1e1caa74a2"),
                            CustomerAddress = "987 Elm St, Springfield",
                            CustomerName = "Jack Hall",
                            PhoneNumber = 34567
                        },
                        new
                        {
                            CustomerId = new Guid("e4a7d7f5-3196-4cc8-9142-9d5ab0d8a746"),
                            CustomerAddress = "123 Cedar St, Springfield",
                            CustomerName = "Kathy Allen",
                            PhoneNumber = 45678
                        },
                        new
                        {
                            CustomerId = new Guid("df6840f1-517b-4c51-9a4d-b8b9e5b4c59c"),
                            CustomerAddress = "456 Birch St, Springfield",
                            CustomerName = "Liam Young",
                            PhoneNumber = 56789
                        },
                        new
                        {
                            CustomerId = new Guid("adad9f9c-94a7-4a07-9a51-8c5c5c8d80cf"),
                            CustomerAddress = "789 Walnut St, Springfield",
                            CustomerName = "Mia Scott",
                            PhoneNumber = 67890
                        },
                        new
                        {
                            CustomerId = new Guid("f0a7c573-55e8-4db1-b31f-93e7b72d4f1d"),
                            CustomerAddress = "321 Willow St, Springfield",
                            CustomerName = "Noah Adams",
                            PhoneNumber = 78901
                        },
                        new
                        {
                            CustomerId = new Guid("e9f2b3e7-ff84-4e7b-989d-d582f4a0e1d6"),
                            CustomerAddress = "654 Maple St, Springfield",
                            CustomerName = "Olivia Nelson",
                            PhoneNumber = 89012
                        },
                        new
                        {
                            CustomerId = new Guid("5e14a6b8-d89c-4a9b-a57d-d53b6f073b1f"),
                            CustomerAddress = "987 Oak St, Springfield",
                            CustomerName = "Paul King",
                            PhoneNumber = 90123
                        },
                        new
                        {
                            CustomerId = new Guid("b1adfce6-5d7c-4c2b-8963-07e2e3c0c4a1"),
                            CustomerAddress = "123 Birch St, Springfield",
                            CustomerName = "Quincy Green",
                            PhoneNumber = 12346
                        },
                        new
                        {
                            CustomerId = new Guid("0f4d2c4b-3c2a-4d58-962f-8b1a1e5d6d89"),
                            CustomerAddress = "456 Walnut St, Springfield",
                            CustomerName = "Rachel Hill",
                            PhoneNumber = 23457
                        },
                        new
                        {
                            CustomerId = new Guid("d6f2a9b1-4381-4ef0-8f9b-1a2e3c4d5b67"),
                            CustomerAddress = "789 Willow St, Springfield",
                            CustomerName = "Steve Harris",
                            PhoneNumber = 34568
                        },
                        new
                        {
                            CustomerId = new Guid("c4c1d85b-f09e-48a0-8f1e-2b4c1d2f6a2d"),
                            CustomerAddress = "321 Cedar St, Springfield",
                            CustomerName = "Tina Lee",
                            PhoneNumber = 45679
                        },
                        new
                        {
                            CustomerId = new Guid("b2e8a3c2-17e5-49b1-b0d9-3a6e7e8f9d1e"),
                            CustomerAddress = "654 Birch St, Springfield",
                            CustomerName = "Ursula Morgan",
                            PhoneNumber = 56780
                        },
                        new
                        {
                            CustomerId = new Guid("a8e3c9b1-6c1d-4d78-9d2a-4f5b6c7d8e9f"),
                            CustomerAddress = "987 Walnut St, Springfield",
                            CustomerName = "Victor Wood",
                            PhoneNumber = 67891
                        });
                });

            modelBuilder.Entity("Entities.Models.CustomerModels.CustomerInvoice", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CustomerId", "InvoiceId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("CustomerInvoice", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = new Guid("d1e6a2f5-0d5a-4d35-835b-623eaf6b3b43"),
                            InvoiceId = new Guid("b8b1d94c-7b45-4f7e-8b79-3a24894d4a77")
                        },
                        new
                        {
                            CustomerId = new Guid("5e1d1c9c-8f2a-4b0b-bcf7-1c44e5a62e1d"),
                            InvoiceId = new Guid("c9a9e9d1-d23d-4f63-a1b3-0a0f7e62ec99")
                        },
                        new
                        {
                            CustomerId = new Guid("e0d11f8f-fb26-4b58-9b1b-fb18c8b01a2e"),
                            InvoiceId = new Guid("d1c3b8a2-41c8-4b27-9f7e-9a4f8e2a6d8b")
                        },
                        new
                        {
                            CustomerId = new Guid("2d7418db-c4e4-44c4-947f-e8dc56f0c517"),
                            InvoiceId = new Guid("e2d5a4c1-0c5f-4d1a-9c9a-f7a6b0e1e76a")
                        },
                        new
                        {
                            CustomerId = new Guid("4f4d08a4-8827-4d65-89a6-0a50f4769fa4"),
                            InvoiceId = new Guid("f3e6d9b2-1d6a-4e4a-8f0a-4c6b9f7e8e8b")
                        },
                        new
                        {
                            CustomerId = new Guid("c8f76e8d-1b9e-4d3d-8d58-20b2a0f11a3b"),
                            InvoiceId = new Guid("b8b1d94c-7b45-4f7e-8b79-3a24894d4a77")
                        },
                        new
                        {
                            CustomerId = new Guid("f4e5b029-3b58-4a67-b1b6-2d23ac7f69d2"),
                            InvoiceId = new Guid("c9a9e9d1-d23d-4f63-a1b3-0a0f7e62ec99")
                        },
                        new
                        {
                            CustomerId = new Guid("2b98e616-8e6a-4c4a-8908-7e8f6c6b9f7e"),
                            InvoiceId = new Guid("d1c3b8a2-41c8-4b27-9f7e-9a4f8e2a6d8b")
                        },
                        new
                        {
                            CustomerId = new Guid("7f62de52-2c1e-4a79-9e46-3d2f5e1d8e43"),
                            InvoiceId = new Guid("e2d5a4c1-0c5f-4d1a-9c9a-f7a6b0e1e76a")
                        },
                        new
                        {
                            CustomerId = new Guid("6e8e03c6-8d21-44a3-9f5d-17443477d05f"),
                            InvoiceId = new Guid("f3e6d9b2-1d6a-4e4a-8f0a-4c6b9f7e8e8b")
                        });
                });

            modelBuilder.Entity("Entities.Models.EmployeeModels.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("EmployeeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("SupermarketId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeeId");

                    b.HasIndex("SupermarketId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86aa"),
                            Address = "1 Main St",
                            EmployeeName = "Emily Roberts",
                            PhoneNumber = 1234,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203791")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ab"),
                            Address = "2 Main St",
                            EmployeeName = "Michael Johnson",
                            PhoneNumber = 2345,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203791")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ac"),
                            Address = "3 Elm St",
                            EmployeeName = "Sophia Williams",
                            PhoneNumber = 3456,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203791")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ad"),
                            Address = "4 Elm St",
                            EmployeeName = "Oliver Brown",
                            PhoneNumber = 4567,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203791")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ae"),
                            Address = "5 Oak St",
                            EmployeeName = "Isabella Davis",
                            PhoneNumber = 5678,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203791")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86af"),
                            Address = "6 Pine St",
                            EmployeeName = "Liam Martinez",
                            PhoneNumber = 6789,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203791")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a1"),
                            Address = "7 Maple St",
                            EmployeeName = "Mia Wilson",
                            PhoneNumber = 7890,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203792")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a2"),
                            Address = "8 Birch St",
                            EmployeeName = "James Miller",
                            PhoneNumber = 8901,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203792")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a3"),
                            Address = "9 Cedar St",
                            EmployeeName = "Ava Taylor",
                            PhoneNumber = 9012,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203792")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a4"),
                            Address = "10 Spruce St",
                            EmployeeName = "Ethan Anderson",
                            PhoneNumber = 1234,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203792")
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a5"),
                            Address = "11 Willow St",
                            EmployeeName = "Olivia Harris",
                            PhoneNumber = 1234,
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203792")
                        });
                });

            modelBuilder.Entity("Entities.Models.EmployeeModels.EmployeeLog", b =>
                {
                    b.Property<Guid>("EmployeeLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LogInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LogOutDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeLogId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeLog", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ba"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86aa"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86bb"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ab"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86bc"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ac"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86bd"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ad"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86be"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ae"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86bf"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86af"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86b1"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a1"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86b2"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a2"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86b3"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a3"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeLogId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86b4"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a4"),
                            LogInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LogOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Entities.Models.EmployeeModels.EmployeePasscode", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Passcode")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "Passcode");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeePasscode", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86aa"),
                            Passcode = 87654321
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ab"),
                            Passcode = 23456789
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ac"),
                            Passcode = 34567891
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ad"),
                            Passcode = 45678912
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ae"),
                            Passcode = 56789123
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86af"),
                            Passcode = 67891234
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a1"),
                            Passcode = 78912345
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a2"),
                            Passcode = 89123456
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a3"),
                            Passcode = 91234567
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a4"),
                            Passcode = 10234568
                        },
                        new
                        {
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a5"),
                            Passcode = 21345679
                        });
                });

            modelBuilder.Entity("Entities.Models.InvoiceModels.Invoice", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("InvoiceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Invoice", (string)null);

                    b.HasData(
                        new
                        {
                            InvoiceId = new Guid("b8b1d94c-7b45-4f7e-8b79-3a24894d4a77"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86aa"),
                            Total = 150.75f
                        },
                        new
                        {
                            InvoiceId = new Guid("c9a9e9d1-d23d-4f63-a1b3-0a0f7e62ec99"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ab"),
                            Total = 220.5f
                        },
                        new
                        {
                            InvoiceId = new Guid("d1c3b8a2-41c8-4b27-9f7e-9a4f8e2a6d8b"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ac"),
                            Total = 350f
                        },
                        new
                        {
                            InvoiceId = new Guid("e2d5a4c1-0c5f-4d1a-9c9a-f7a6b0e1e76a"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ad"),
                            Total = 190.25f
                        },
                        new
                        {
                            InvoiceId = new Guid("f3e6d9b2-1d6a-4e4a-8f0a-4c6b9f7e8e8b"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86ae"),
                            Total = 175f
                        },
                        new
                        {
                            InvoiceId = new Guid("f4b8d1c5-7a6b-4b2a-8d2e-8f9c4d5e0d8f"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86af"),
                            Total = 220f
                        },
                        new
                        {
                            InvoiceId = new Guid("f5c9e2d1-3b5d-4e4b-8e9d-7f6b1c0a8d7e"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a1"),
                            Total = 140.75f
                        },
                        new
                        {
                            InvoiceId = new Guid("f6d7b8e2-4c6e-4a0f-8f1c-9e3d4b5e6c7f"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a2"),
                            Total = 310f
                        },
                        new
                        {
                            InvoiceId = new Guid("f7e8c9d3-5b7f-4c1a-9e8b-0a1d2e3f4b6c"),
                            EmployeeId = new Guid("536d010d-465c-4c4b-84e9-18d5df4d86a3"),
                            Total = 275.5f
                        });
                });

            modelBuilder.Entity("Entities.Models.InvoiceModels.InvoiceDetails", b =>
                {
                    b.Property<Guid>("InvoiceDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InvoiceDetailsId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceDetails", (string)null);
                });

            modelBuilder.Entity("Entities.Models.ProductModels.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ManDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<long>("ProductCode")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4a"),
                            Cost = 0f,
                            ExpDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1.5f,
                            ProductCode = 0L
                        },
                        new
                        {
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4b"),
                            Cost = 0f,
                            ExpDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0.99f,
                            ProductCode = 0L
                        },
                        new
                        {
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4c"),
                            Cost = 0f,
                            ExpDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1.2f,
                            ProductCode = 0L
                        },
                        new
                        {
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4d"),
                            Cost = 0f,
                            ExpDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2f,
                            ProductCode = 0L
                        },
                        new
                        {
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4e"),
                            Cost = 0f,
                            ExpDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1f,
                            ProductCode = 0L
                        },
                        new
                        {
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4f"),
                            Cost = 0f,
                            ExpDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2.5f,
                            ProductCode = 0L
                        },
                        new
                        {
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd41"),
                            Cost = 0f,
                            ExpDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5f,
                            ProductCode = 0L
                        });
                });

            modelBuilder.Entity("Entities.Models.SuperMarketModels.SalesHistory", b =>
                {
                    b.Property<Guid>("SalesHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Profit")
                        .HasColumnType("real");

                    b.HasKey("SalesHistoryId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("SalesHistory", (string)null);
                });

            modelBuilder.Entity("Entities.Models.SuperMarketModels.Stock", b =>
                {
                    b.Property<Guid>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("StockId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock", (string)null);

                    b.HasData(
                        new
                        {
                            StockId = new Guid("5983cb43-1364-4227-bbf0-0c6ade03bd8a"),
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4a"),
                            Quantity = 100L
                        },
                        new
                        {
                            StockId = new Guid("5983cb43-1364-4227-bbf0-0c6ade03bd8b"),
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4b"),
                            Quantity = 150L
                        },
                        new
                        {
                            StockId = new Guid("5983cb43-1364-4227-bbf0-0c6ade03bd8c"),
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4c"),
                            Quantity = 200L
                        },
                        new
                        {
                            StockId = new Guid("5983cb43-1364-4227-bbf0-0c6ade03bd8d"),
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4d"),
                            Quantity = 180L
                        },
                        new
                        {
                            StockId = new Guid("5983cb43-1364-4227-bbf0-0c6ade03bd8e"),
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4e"),
                            Quantity = 120L
                        },
                        new
                        {
                            StockId = new Guid("5983cb43-1364-4227-bbf0-0c6ade03bd8f"),
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd4f"),
                            Quantity = 90L
                        },
                        new
                        {
                            StockId = new Guid("5983cb43-1364-4227-bbf0-0c6ade03bd81"),
                            ProductId = new Guid("d37d22d5-ba61-4d70-ba0c-b7adff04cd41"),
                            Quantity = 80L
                        });
                });

            modelBuilder.Entity("Entities.Models.SuperMarketModels.SuperMarket", b =>
                {
                    b.Property<Guid>("SupermarketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SupermarketName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupermarketId");

                    b.ToTable("SuperMarket", (string)null);

                    b.HasData(
                        new
                        {
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203791"),
                            PhoneNumber = 0,
                            SupermarketName = "SuperMart Downtown"
                        },
                        new
                        {
                            SupermarketId = new Guid("5f2cfd7a-f135-4dad-9ebd-97014f203792"),
                            PhoneNumber = 0,
                            SupermarketName = "SuperMart Uptown"
                        });
                });

            modelBuilder.Entity("Entities.Models.CustomerModels.CustomerInvoice", b =>
                {
                    b.HasOne("Entities.Models.CustomerModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.InvoiceModels.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Entities.Models.EmployeeModels.Employee", b =>
                {
                    b.HasOne("Entities.Models.SuperMarketModels.SuperMarket", null)
                        .WithMany("Employees")
                        .HasForeignKey("SupermarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Models.EmployeeModels.EmployeeLog", b =>
                {
                    b.HasOne("Entities.Models.EmployeeModels.Employee", null)
                        .WithMany("EmployeeLogs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Models.EmployeeModels.EmployeePasscode", b =>
                {
                    b.HasOne("Entities.Models.EmployeeModels.Employee", null)
                        .WithOne("EmployeePasscode")
                        .HasForeignKey("Entities.Models.EmployeeModels.EmployeePasscode", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Models.InvoiceModels.Invoice", b =>
                {
                    b.HasOne("Entities.Models.EmployeeModels.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Entities.Models.InvoiceModels.InvoiceDetails", b =>
                {
                    b.HasOne("Entities.Models.InvoiceModels.Invoice", null)
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.ProductModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Models.SuperMarketModels.SalesHistory", b =>
                {
                    b.HasOne("Entities.Models.InvoiceModels.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Entities.Models.SuperMarketModels.Stock", b =>
                {
                    b.HasOne("Entities.Models.ProductModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Models.EmployeeModels.Employee", b =>
                {
                    b.Navigation("EmployeeLogs");

                    b.Navigation("EmployeePasscode");
                });

            modelBuilder.Entity("Entities.Models.InvoiceModels.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("Entities.Models.SuperMarketModels.SuperMarket", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
